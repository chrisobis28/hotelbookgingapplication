plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'checkstyle'
	id 'jacoco'
}

group = 'com.team2a'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
	targetCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web:2.7.9'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	//implementation "org.hibernate:hibernate-core:5.4.2.Final"
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'com.h2database:h2'
}

tasks.named('test') {
	useJUnitPlatform()
}

jacoco {
	toolVersion = "0.8.8"
	reportsDirectory.set(layout.buildDirectory.dir("reports/jacoco"))
}

test {
	// Exclude Lombok-generated methods from code coverage analysis
	jacoco {
		excludes += ['**/*_$*$*.class', // Exclude Lombok-generated methods (getters/setters)
			'**/BookingSiemensApplication.class',
			'**/Routes.class'
		]
	}
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required.set(true)
		csv.required.set(false)
		html.required.set(true)
	}
}

jacocoTestCoverageVerification {
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it,
					exclude: [
							'**/entity/**/*.class', // Exclude classes in specific packages
							'**/*_$*$*.class',
							'**/*$*.*',             // Exclude nested classes
							'**/*Lambda$*.*',        // Exclude lambda classes
							'**/BookingSiemensApplication.class',
							'**/Routes.class'
					])
		}))
	}
}


def isCI = System.getenv().containsKey("CI")

checkstyle {
	showViolations = true
	ignoreFailures = !isCI
	maxWarnings = 0
	toolVersion = '8.45.1'
	configFile = file('checkstyle.xml')
}

check.dependsOn(checkstyleMain, checkstyleTest)

test.finalizedBy(jacocoTestReport)